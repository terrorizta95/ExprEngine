// Generated from MatlabGrammar.g4 by ANTLR 4.5.3

package io.lambdacloud.matlab;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MatlabGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, ADD=14, SUB=15, MUL=16, DIV=17, 
		POW=18, SOL=19, DADD=20, DSUB=21, DMUL=22, DRDIV=23, DLDIV=24, AND=25, 
		OR=26, NOT=27, TRUE=28, FALSE=29, GT=30, GE=31, LT=32, LE=33, EQ=34, NEQ=35, 
		NEQ2=36, BAND=37, BOR=38, BXOR=39, BNOT=40, SHL=41, SHR=42, USHR=43, INC=44, 
		DESC=45, ADD_ASSIGN=46, SUB_ASSIGN=47, MUL_ASSIGN=48, DIV_ASSIGN=49, REM_ASSIGN=50, 
		ASSIGN=51, LPAREN=52, RPAREN=53, LBRK=54, RBRK=55, LCB=56, RCB=57, INTEGER=58, 
		FLOAT=59, IDENTIFIER=60, COMMA=61, COLON=62, SEMI=63, PERIOD=64, SQUOTE=65, 
		DQUOTE=66, COMMENT=67, SKIP_TOKEN=68, WS=69, StringLiteral=70;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "ADD", "SUB", "MUL", "DIV", "POW", 
		"SOL", "DADD", "DSUB", "DMUL", "DRDIV", "DLDIV", "AND", "OR", "NOT", "TRUE", 
		"FALSE", "GT", "GE", "LT", "LE", "EQ", "NEQ", "NEQ2", "BAND", "BOR", "BXOR", 
		"BNOT", "SHL", "SHR", "USHR", "INC", "DESC", "ADD_ASSIGN", "SUB_ASSIGN", 
		"MUL_ASSIGN", "DIV_ASSIGN", "REM_ASSIGN", "ASSIGN", "LPAREN", "RPAREN", 
		"LBRK", "RBRK", "LCB", "RCB", "INTEGER", "FLOAT", "IDENTIFIER", "COMMA", 
		"COLON", "SEMI", "PERIOD", "SQUOTE", "DQUOTE", "COMMENT", "SKIP_TOKEN", 
		"WS", "StringLiteral", "Characters", "Character", "EscapeSeq"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'\n'", "'nargin'", "'function'", "'end'", "'if'", "'elseif'", "'else'", 
		"'for'", "'in'", "'while'", "'return'", "'tic'", "'toc'", "'+'", "'-'", 
		"'*'", "'/'", "'**'", "'\\'", "'.+'", "'.-'", "'.*'", "'./'", "'.\\'", 
		null, null, null, "'true'", "'false'", "'>'", "'>='", "'<'", "'<='", "'=='", 
		"'!='", "'~='", "'&'", "'|'", "'^'", "'~'", "'<<'", "'>>'", "'>>>'", "'++'", 
		"'--'", "'+='", "'-='", "'*='", "'/='", "'%='", "'='", "'('", "')'", "'['", 
		"']'", "'{'", "'}'", null, null, null, "','", "':'", "';'", "'.'", "'''", 
		"'\"'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "ADD", "SUB", "MUL", "DIV", "POW", "SOL", "DADD", "DSUB", 
		"DMUL", "DRDIV", "DLDIV", "AND", "OR", "NOT", "TRUE", "FALSE", "GT", "GE", 
		"LT", "LE", "EQ", "NEQ", "NEQ2", "BAND", "BOR", "BXOR", "BNOT", "SHL", 
		"SHR", "USHR", "INC", "DESC", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", 
		"DIV_ASSIGN", "REM_ASSIGN", "ASSIGN", "LPAREN", "RPAREN", "LBRK", "RBRK", 
		"LCB", "RCB", "INTEGER", "FLOAT", "IDENTIFIER", "COMMA", "COLON", "SEMI", 
		"PERIOD", "SQUOTE", "DQUOTE", "COMMENT", "SKIP_TOKEN", "WS", "StringLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MatlabGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MatlabGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2H\u01bc\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3"+
		"\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16"+
		"\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\32\5\32\u00f8\n\32\3\33\3\33\3\33\3\33\5\33\u00fe"+
		"\n\33\3\34\3\34\3\34\3\34\5\34\u0104\n\34\3\35\3\35\3\35\3\35\3\35\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3"+
		"#\3$\3$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,"+
		"\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61\3\62\3"+
		"\62\3\62\3\63\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38"+
		"\39\39\3:\3:\3;\6;\u015a\n;\r;\16;\u015b\3;\5;\u015f\n;\3<\7<\u0162\n"+
		"<\f<\16<\u0165\13<\3<\3<\6<\u0169\n<\r<\16<\u016a\3<\6<\u016e\n<\r<\16"+
		"<\u016f\3<\3<\7<\u0174\n<\f<\16<\u0177\13<\5<\u0179\n<\3=\3=\7=\u017d"+
		"\n=\f=\16=\u0180\13=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3D\5D\u0191"+
		"\nD\3D\6D\u0194\nD\rD\16D\u0195\3D\5D\u0199\nD\3D\3D\3E\6E\u019e\nE\r"+
		"E\16E\u019f\3E\3E\3F\3F\3G\3G\5G\u01a8\nG\3G\5G\u01ab\nG\3G\3G\5G\u01af"+
		"\nG\3H\6H\u01b2\nH\rH\16H\u01b3\3I\3I\5I\u01b8\nI\3J\3J\3J\3\u0195\2K"+
		"\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o"+
		"9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH"+
		"\u008f\2\u0091\2\u0093\2\3\2\n\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\3\3\f"+
		"\f\3\2\16\17\4\2\13\13\"\"\5\2$$))^^\n\2$$))^^ddhhppttvv\u01cb\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"+
		"\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2"+
		"c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3"+
		"\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2"+
		"\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3"+
		"\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2"+
		"\3\u0095\3\2\2\2\5\u0097\3\2\2\2\7\u009e\3\2\2\2\t\u00a7\3\2\2\2\13\u00ab"+
		"\3\2\2\2\r\u00ae\3\2\2\2\17\u00b5\3\2\2\2\21\u00ba\3\2\2\2\23\u00be\3"+
		"\2\2\2\25\u00c1\3\2\2\2\27\u00c7\3\2\2\2\31\u00ce\3\2\2\2\33\u00d2\3\2"+
		"\2\2\35\u00d6\3\2\2\2\37\u00d8\3\2\2\2!\u00da\3\2\2\2#\u00dc\3\2\2\2%"+
		"\u00de\3\2\2\2\'\u00e1\3\2\2\2)\u00e3\3\2\2\2+\u00e6\3\2\2\2-\u00e9\3"+
		"\2\2\2/\u00ec\3\2\2\2\61\u00ef\3\2\2\2\63\u00f7\3\2\2\2\65\u00fd\3\2\2"+
		"\2\67\u0103\3\2\2\29\u0105\3\2\2\2;\u010a\3\2\2\2=\u0110\3\2\2\2?\u0112"+
		"\3\2\2\2A\u0115\3\2\2\2C\u0117\3\2\2\2E\u011a\3\2\2\2G\u011d\3\2\2\2I"+
		"\u0120\3\2\2\2K\u0123\3\2\2\2M\u0125\3\2\2\2O\u0127\3\2\2\2Q\u0129\3\2"+
		"\2\2S\u012b\3\2\2\2U\u012e\3\2\2\2W\u0131\3\2\2\2Y\u0135\3\2\2\2[\u0138"+
		"\3\2\2\2]\u013b\3\2\2\2_\u013e\3\2\2\2a\u0141\3\2\2\2c\u0144\3\2\2\2e"+
		"\u0147\3\2\2\2g\u014a\3\2\2\2i\u014c\3\2\2\2k\u014e\3\2\2\2m\u0150\3\2"+
		"\2\2o\u0152\3\2\2\2q\u0154\3\2\2\2s\u0156\3\2\2\2u\u0159\3\2\2\2w\u0178"+
		"\3\2\2\2y\u017a\3\2\2\2{\u0181\3\2\2\2}\u0183\3\2\2\2\177\u0185\3\2\2"+
		"\2\u0081\u0187\3\2\2\2\u0083\u0189\3\2\2\2\u0085\u018b\3\2\2\2\u0087\u0190"+
		"\3\2\2\2\u0089\u019d\3\2\2\2\u008b\u01a3\3\2\2\2\u008d\u01a7\3\2\2\2\u008f"+
		"\u01b1\3\2\2\2\u0091\u01b7\3\2\2\2\u0093\u01b9\3\2\2\2\u0095\u0096\7\f"+
		"\2\2\u0096\4\3\2\2\2\u0097\u0098\7p\2\2\u0098\u0099\7c\2\2\u0099\u009a"+
		"\7t\2\2\u009a\u009b\7i\2\2\u009b\u009c\7k\2\2\u009c\u009d\7p\2\2\u009d"+
		"\6\3\2\2\2\u009e\u009f\7h\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1\7p\2\2\u00a1"+
		"\u00a2\7e\2\2\u00a2\u00a3\7v\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7q\2\2"+
		"\u00a5\u00a6\7p\2\2\u00a6\b\3\2\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9\7p"+
		"\2\2\u00a9\u00aa\7f\2\2\u00aa\n\3\2\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad"+
		"\7h\2\2\u00ad\f\3\2\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7n\2\2\u00b0\u00b1"+
		"\7u\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7h\2\2\u00b4"+
		"\16\3\2\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8\7u\2\2\u00b8"+
		"\u00b9\7g\2\2\u00b9\20\3\2\2\2\u00ba\u00bb\7h\2\2\u00bb\u00bc\7q\2\2\u00bc"+
		"\u00bd\7t\2\2\u00bd\22\3\2\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0\7p\2\2\u00c0"+
		"\24\3\2\2\2\u00c1\u00c2\7y\2\2\u00c2\u00c3\7j\2\2\u00c3\u00c4\7k\2\2\u00c4"+
		"\u00c5\7n\2\2\u00c5\u00c6\7g\2\2\u00c6\26\3\2\2\2\u00c7\u00c8\7t\2\2\u00c8"+
		"\u00c9\7g\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7w\2\2\u00cb\u00cc\7t\2\2"+
		"\u00cc\u00cd\7p\2\2\u00cd\30\3\2\2\2\u00ce\u00cf\7v\2\2\u00cf\u00d0\7"+
		"k\2\2\u00d0\u00d1\7e\2\2\u00d1\32\3\2\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4"+
		"\7q\2\2\u00d4\u00d5\7e\2\2\u00d5\34\3\2\2\2\u00d6\u00d7\7-\2\2\u00d7\36"+
		"\3\2\2\2\u00d8\u00d9\7/\2\2\u00d9 \3\2\2\2\u00da\u00db\7,\2\2\u00db\""+
		"\3\2\2\2\u00dc\u00dd\7\61\2\2\u00dd$\3\2\2\2\u00de\u00df\7,\2\2\u00df"+
		"\u00e0\7,\2\2\u00e0&\3\2\2\2\u00e1\u00e2\7^\2\2\u00e2(\3\2\2\2\u00e3\u00e4"+
		"\7\60\2\2\u00e4\u00e5\7-\2\2\u00e5*\3\2\2\2\u00e6\u00e7\7\60\2\2\u00e7"+
		"\u00e8\7/\2\2\u00e8,\3\2\2\2\u00e9\u00ea\7\60\2\2\u00ea\u00eb\7,\2\2\u00eb"+
		".\3\2\2\2\u00ec\u00ed\7\60\2\2\u00ed\u00ee\7\61\2\2\u00ee\60\3\2\2\2\u00ef"+
		"\u00f0\7\60\2\2\u00f0\u00f1\7^\2\2\u00f1\62\3\2\2\2\u00f2\u00f3\7c\2\2"+
		"\u00f3\u00f4\7p\2\2\u00f4\u00f8\7f\2\2\u00f5\u00f6\7(\2\2\u00f6\u00f8"+
		"\7(\2\2\u00f7\u00f2\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f8\64\3\2\2\2\u00f9"+
		"\u00fa\7q\2\2\u00fa\u00fe\7t\2\2\u00fb\u00fc\7~\2\2\u00fc\u00fe\7~\2\2"+
		"\u00fd\u00f9\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fe\66\3\2\2\2\u00ff\u0100"+
		"\7p\2\2\u0100\u0101\7q\2\2\u0101\u0104\7v\2\2\u0102\u0104\7#\2\2\u0103"+
		"\u00ff\3\2\2\2\u0103\u0102\3\2\2\2\u01048\3\2\2\2\u0105\u0106\7v\2\2\u0106"+
		"\u0107\7t\2\2\u0107\u0108\7w\2\2\u0108\u0109\7g\2\2\u0109:\3\2\2\2\u010a"+
		"\u010b\7h\2\2\u010b\u010c\7c\2\2\u010c\u010d\7n\2\2\u010d\u010e\7u\2\2"+
		"\u010e\u010f\7g\2\2\u010f<\3\2\2\2\u0110\u0111\7@\2\2\u0111>\3\2\2\2\u0112"+
		"\u0113\7@\2\2\u0113\u0114\7?\2\2\u0114@\3\2\2\2\u0115\u0116\7>\2\2\u0116"+
		"B\3\2\2\2\u0117\u0118\7>\2\2\u0118\u0119\7?\2\2\u0119D\3\2\2\2\u011a\u011b"+
		"\7?\2\2\u011b\u011c\7?\2\2\u011cF\3\2\2\2\u011d\u011e\7#\2\2\u011e\u011f"+
		"\7?\2\2\u011fH\3\2\2\2\u0120\u0121\7\u0080\2\2\u0121\u0122\7?\2\2\u0122"+
		"J\3\2\2\2\u0123\u0124\7(\2\2\u0124L\3\2\2\2\u0125\u0126\7~\2\2\u0126N"+
		"\3\2\2\2\u0127\u0128\7`\2\2\u0128P\3\2\2\2\u0129\u012a\7\u0080\2\2\u012a"+
		"R\3\2\2\2\u012b\u012c\7>\2\2\u012c\u012d\7>\2\2\u012dT\3\2\2\2\u012e\u012f"+
		"\7@\2\2\u012f\u0130\7@\2\2\u0130V\3\2\2\2\u0131\u0132\7@\2\2\u0132\u0133"+
		"\7@\2\2\u0133\u0134\7@\2\2\u0134X\3\2\2\2\u0135\u0136\7-\2\2\u0136\u0137"+
		"\7-\2\2\u0137Z\3\2\2\2\u0138\u0139\7/\2\2\u0139\u013a\7/\2\2\u013a\\\3"+
		"\2\2\2\u013b\u013c\7-\2\2\u013c\u013d\7?\2\2\u013d^\3\2\2\2\u013e\u013f"+
		"\7/\2\2\u013f\u0140\7?\2\2\u0140`\3\2\2\2\u0141\u0142\7,\2\2\u0142\u0143"+
		"\7?\2\2\u0143b\3\2\2\2\u0144\u0145\7\61\2\2\u0145\u0146\7?\2\2\u0146d"+
		"\3\2\2\2\u0147\u0148\7\'\2\2\u0148\u0149\7?\2\2\u0149f\3\2\2\2\u014a\u014b"+
		"\7?\2\2\u014bh\3\2\2\2\u014c\u014d\7*\2\2\u014dj\3\2\2\2\u014e\u014f\7"+
		"+\2\2\u014fl\3\2\2\2\u0150\u0151\7]\2\2\u0151n\3\2\2\2\u0152\u0153\7_"+
		"\2\2\u0153p\3\2\2\2\u0154\u0155\7}\2\2\u0155r\3\2\2\2\u0156\u0157\7\177"+
		"\2\2\u0157t\3\2\2\2\u0158\u015a\t\2\2\2\u0159\u0158\3\2\2\2\u015a\u015b"+
		"\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c\3\2\2\2\u015c\u015e\3\2\2\2\u015d"+
		"\u015f\7N\2\2\u015e\u015d\3\2\2\2\u015e\u015f\3\2\2\2\u015fv\3\2\2\2\u0160"+
		"\u0162\t\2\2\2\u0161\u0160\3\2\2\2\u0162\u0165\3\2\2\2\u0163\u0161\3\2"+
		"\2\2\u0163\u0164\3\2\2\2\u0164\u0166\3\2\2\2\u0165\u0163\3\2\2\2\u0166"+
		"\u0168\7\60\2\2\u0167\u0169\t\2\2\2\u0168\u0167\3\2\2\2\u0169\u016a\3"+
		"\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3\2\2\2\u016b\u0179\3\2\2\2\u016c"+
		"\u016e\t\2\2\2\u016d\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u016d\3\2"+
		"\2\2\u016f\u0170\3\2\2\2\u0170\u0171\3\2\2\2\u0171\u0175\7\60\2\2\u0172"+
		"\u0174\t\2\2\2\u0173\u0172\3\2\2\2\u0174\u0177\3\2\2\2\u0175\u0173\3\2"+
		"\2\2\u0175\u0176\3\2\2\2\u0176\u0179\3\2\2\2\u0177\u0175\3\2\2\2\u0178"+
		"\u0163\3\2\2\2\u0178\u016d\3\2\2\2\u0179x\3\2\2\2\u017a\u017e\t\3\2\2"+
		"\u017b\u017d\t\4\2\2\u017c\u017b\3\2\2\2\u017d\u0180\3\2\2\2\u017e\u017c"+
		"\3\2\2\2\u017e\u017f\3\2\2\2\u017fz\3\2\2\2\u0180\u017e\3\2\2\2\u0181"+
		"\u0182\7.\2\2\u0182|\3\2\2\2\u0183\u0184\7<\2\2\u0184~\3\2\2\2\u0185\u0186"+
		"\7=\2\2\u0186\u0080\3\2\2\2\u0187\u0188\7\60\2\2\u0188\u0082\3\2\2\2\u0189"+
		"\u018a\7)\2\2\u018a\u0084\3\2\2\2\u018b\u018c\7$\2\2\u018c\u0086\3\2\2"+
		"\2\u018d\u018e\7\61\2\2\u018e\u0191\7\61\2\2\u018f\u0191\7\'\2\2\u0190"+
		"\u018d\3\2\2\2\u0190\u018f\3\2\2\2\u0191\u0193\3\2\2\2\u0192\u0194\13"+
		"\2\2\2\u0193\u0192\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0196\3\2\2\2\u0195"+
		"\u0193\3\2\2\2\u0196\u0198\3\2\2\2\u0197\u0199\t\5\2\2\u0198\u0197\3\2"+
		"\2\2\u0199\u019a\3\2\2\2\u019a\u019b\bD\2\2\u019b\u0088\3\2\2\2\u019c"+
		"\u019e\t\6\2\2\u019d\u019c\3\2\2\2\u019e\u019f\3\2\2\2\u019f\u019d\3\2"+
		"\2\2\u019f\u01a0\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1\u01a2\bE\2\2\u01a2"+
		"\u008a\3\2\2\2\u01a3\u01a4\t\7\2\2\u01a4\u008c\3\2\2\2\u01a5\u01a8\5\u0085"+
		"C\2\u01a6\u01a8\5\u0083B\2\u01a7\u01a5\3\2\2\2\u01a7\u01a6\3\2\2\2\u01a8"+
		"\u01aa\3\2\2\2\u01a9\u01ab\5\u008fH\2\u01aa\u01a9\3\2\2\2\u01aa\u01ab"+
		"\3\2\2\2\u01ab\u01ae\3\2\2\2\u01ac\u01af\5\u0085C\2\u01ad\u01af\5\u0083"+
		"B\2\u01ae\u01ac\3\2\2\2\u01ae\u01ad\3\2\2\2\u01af\u008e\3\2\2\2\u01b0"+
		"\u01b2\5\u0091I\2\u01b1\u01b0\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3\u01b1"+
		"\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u0090\3\2\2\2\u01b5\u01b8\n\b\2\2\u01b6"+
		"\u01b8\5\u0093J\2\u01b7\u01b5\3\2\2\2\u01b7\u01b6\3\2\2\2\u01b8\u0092"+
		"\3\2\2\2\u01b9\u01ba\7^\2\2\u01ba\u01bb\t\t\2\2\u01bb\u0094\3\2\2\2\27"+
		"\2\u00f7\u00fd\u0103\u015b\u015e\u0163\u016a\u016f\u0175\u0178\u017e\u0190"+
		"\u0195\u0198\u019f\u01a7\u01aa\u01ae\u01b3\u01b7\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}