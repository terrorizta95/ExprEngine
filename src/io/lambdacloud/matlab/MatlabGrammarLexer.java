// Generated from MatlabGrammar.g4 by ANTLR 4.5.3

package io.lambdacloud.matlab;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MatlabGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, ADD=17, 
		SUB=18, MUL=19, DIV=20, POW=21, SOL=22, DADD=23, DSUB=24, DMUL=25, DRDIV=26, 
		DLDIV=27, DPOW=28, AND=29, OR=30, NOT=31, TRUE=32, FALSE=33, GT=34, GE=35, 
		LT=36, LE=37, EQ=38, NEQ=39, NEQ2=40, SHL=41, SHR=42, USHR=43, INC=44, 
		DESC=45, ADD_ASSIGN=46, SUB_ASSIGN=47, MUL_ASSIGN=48, DIV_ASSIGN=49, REM_ASSIGN=50, 
		ASSIGN=51, LPAREN=52, RPAREN=53, LBRK=54, RBRK=55, LCB=56, RCB=57, END=58, 
		NARGIN=59, NARGOUT=60, CLASS=61, BAND=62, BOR=63, BXOR=64, BNOT=65, INTEGER=66, 
		FLOAT=67, IDENTIFIER=68, COMMA=69, COLON=70, SEMI=71, PERIOD=72, SQUOTE=73, 
		DQUOTE=74, DPRIME=75, COMMENT=76, SKIP_TOKEN=77, WS=78, StringLiteral=79;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "ADD", "SUB", 
		"MUL", "DIV", "POW", "SOL", "DADD", "DSUB", "DMUL", "DRDIV", "DLDIV", 
		"DPOW", "AND", "OR", "NOT", "TRUE", "FALSE", "GT", "GE", "LT", "LE", "EQ", 
		"NEQ", "NEQ2", "SHL", "SHR", "USHR", "INC", "DESC", "ADD_ASSIGN", "SUB_ASSIGN", 
		"MUL_ASSIGN", "DIV_ASSIGN", "REM_ASSIGN", "ASSIGN", "LPAREN", "RPAREN", 
		"LBRK", "RBRK", "LCB", "RCB", "END", "NARGIN", "NARGOUT", "CLASS", "BAND", 
		"BOR", "BXOR", "BNOT", "INTEGER", "FLOAT", "IDENTIFIER", "COMMA", "COLON", 
		"SEMI", "PERIOD", "SQUOTE", "DQUOTE", "DPRIME", "COMMENT", "SKIP_TOKEN", 
		"WS", "StringLiteral", "Characters", "Character", "EscapeSeq"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'\n'", "'function'", "'if'", "'elseif'", "'else'", "'for'", "'in'", 
		"'while'", "'return'", "'switch'", "'case'", "'otherwise'", "'tic'", "'toc'", 
		"'''", "'@'", "'+'", "'-'", "'*'", "'/'", null, "'\\'", "'.+'", "'.-'", 
		"'.*'", "'./'", "'.\\'", null, null, null, null, "'true'", "'false'", 
		"'>'", "'>='", "'<'", "'<='", "'=='", "'!='", "'~='", "'<<'", "'>>'", 
		"'>>>'", "'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'%='", "'='", 
		"'('", "')'", "'['", "']'", "'{'", "'}'", "'end'", "'nargin'", "'nargout'", 
		"'class'", "'&'", "'|'", "'^'", "'~'", null, null, null, "','", "':'", 
		"';'", "'.'", "'`'", "'\"'", "'.''"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "ADD", "SUB", "MUL", "DIV", "POW", "SOL", 
		"DADD", "DSUB", "DMUL", "DRDIV", "DLDIV", "DPOW", "AND", "OR", "NOT", 
		"TRUE", "FALSE", "GT", "GE", "LT", "LE", "EQ", "NEQ", "NEQ2", "SHL", "SHR", 
		"USHR", "INC", "DESC", "ADD_ASSIGN", "SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", 
		"REM_ASSIGN", "ASSIGN", "LPAREN", "RPAREN", "LBRK", "RBRK", "LCB", "RCB", 
		"END", "NARGIN", "NARGOUT", "CLASS", "BAND", "BOR", "BXOR", "BNOT", "INTEGER", 
		"FLOAT", "IDENTIFIER", "COMMA", "COLON", "SEMI", "PERIOD", "SQUOTE", "DQUOTE", 
		"DPRIME", "COMMENT", "SKIP_TOKEN", "WS", "StringLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MatlabGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MatlabGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2Q\u0217\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\3\2\3"+
		"\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3"+
		"\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3"+
		"\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3"+
		"\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\5\26\u0103\n\26\3\27\3\27\3\30"+
		"\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\35\3\35\3\35\3\35\3\35\5\35\u011b\n\35\3\36\3\36\3\36\3\36\3\36\5\36"+
		"\u0122\n\36\3\37\3\37\3\37\3\37\5\37\u0128\n\37\3 \3 \3 \3 \5 \u012e\n"+
		" \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3$\3$\3$\3%\3%\3&\3&\3"+
		"&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3,\3-\3-\3"+
		"-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61\3\62\3\62\3\62\3\63"+
		"\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3"+
		";\3;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3=\3=\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\3"+
		">\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\6C\u019d\nC\rC\16C\u019e\3C\5C\u01a2\n"+
		"C\3D\7D\u01a5\nD\fD\16D\u01a8\13D\3D\3D\6D\u01ac\nD\rD\16D\u01ad\3D\6"+
		"D\u01b1\nD\rD\16D\u01b2\3D\3D\7D\u01b7\nD\fD\16D\u01ba\13D\5D\u01bc\n"+
		"D\3E\3E\7E\u01c0\nE\fE\16E\u01c3\13E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K"+
		"\3K\3L\3L\3L\3M\3M\3M\5M\u01d7\nM\3M\7M\u01da\nM\fM\16M\u01dd\13M\3M\5"+
		"M\u01e0\nM\3M\3M\3N\6N\u01e5\nN\rN\16N\u01e6\3N\3N\3N\3N\3N\7N\u01ee\n"+
		"N\fN\16N\u01f1\13N\3N\6N\u01f4\nN\rN\16N\u01f5\5N\u01f8\nN\3N\3N\3O\3"+
		"O\3P\3P\5P\u0200\nP\3P\3P\3P\3P\5P\u0206\nP\3P\3P\5P\u020a\nP\3Q\6Q\u020d"+
		"\nQ\rQ\16Q\u020e\3R\3R\5R\u0213\nR\3S\3S\3S\2\2T\3\3\5\4\7\5\t\6\13\7"+
		"\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081"+
		"B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095"+
		"L\u0097M\u0099N\u009bO\u009dP\u009fQ\u00a1\2\u00a3\2\u00a5\2\3\2\f\4\2"+
		"##\u0080\u0080\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\4\2\f\f\17\17\4\2\13"+
		"\13\16\17\3\2\"\"\4\2\13\13\"\"\6\2\f\f$$^^bb\n\2$$^^bbddhhppttvv\u022c"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2"+
		"{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2"+
		"\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\3\u00a7\3\2\2\2\5\u00a9\3\2\2\2\7\u00b2\3\2\2\2\t\u00b5\3\2\2\2\13"+
		"\u00bc\3\2\2\2\r\u00c1\3\2\2\2\17\u00c5\3\2\2\2\21\u00c8\3\2\2\2\23\u00ce"+
		"\3\2\2\2\25\u00d5\3\2\2\2\27\u00dc\3\2\2\2\31\u00e1\3\2\2\2\33\u00eb\3"+
		"\2\2\2\35\u00ef\3\2\2\2\37\u00f3\3\2\2\2!\u00f5\3\2\2\2#\u00f7\3\2\2\2"+
		"%\u00f9\3\2\2\2\'\u00fb\3\2\2\2)\u00fd\3\2\2\2+\u0102\3\2\2\2-\u0104\3"+
		"\2\2\2/\u0106\3\2\2\2\61\u0109\3\2\2\2\63\u010c\3\2\2\2\65\u010f\3\2\2"+
		"\2\67\u0112\3\2\2\29\u011a\3\2\2\2;\u0121\3\2\2\2=\u0127\3\2\2\2?\u012d"+
		"\3\2\2\2A\u012f\3\2\2\2C\u0134\3\2\2\2E\u013a\3\2\2\2G\u013c\3\2\2\2I"+
		"\u013f\3\2\2\2K\u0141\3\2\2\2M\u0144\3\2\2\2O\u0147\3\2\2\2Q\u014a\3\2"+
		"\2\2S\u014d\3\2\2\2U\u0150\3\2\2\2W\u0153\3\2\2\2Y\u0157\3\2\2\2[\u015a"+
		"\3\2\2\2]\u015d\3\2\2\2_\u0160\3\2\2\2a\u0163\3\2\2\2c\u0166\3\2\2\2e"+
		"\u0169\3\2\2\2g\u016c\3\2\2\2i\u016e\3\2\2\2k\u0170\3\2\2\2m\u0172\3\2"+
		"\2\2o\u0174\3\2\2\2q\u0176\3\2\2\2s\u0178\3\2\2\2u\u017a\3\2\2\2w\u017e"+
		"\3\2\2\2y\u0185\3\2\2\2{\u018d\3\2\2\2}\u0193\3\2\2\2\177\u0195\3\2\2"+
		"\2\u0081\u0197\3\2\2\2\u0083\u0199\3\2\2\2\u0085\u019c\3\2\2\2\u0087\u01bb"+
		"\3\2\2\2\u0089\u01bd\3\2\2\2\u008b\u01c4\3\2\2\2\u008d\u01c6\3\2\2\2\u008f"+
		"\u01c8\3\2\2\2\u0091\u01ca\3\2\2\2\u0093\u01cc\3\2\2\2\u0095\u01ce\3\2"+
		"\2\2\u0097\u01d0\3\2\2\2\u0099\u01d6\3\2\2\2\u009b\u01f7\3\2\2\2\u009d"+
		"\u01fb\3\2\2\2\u009f\u0209\3\2\2\2\u00a1\u020c\3\2\2\2\u00a3\u0212\3\2"+
		"\2\2\u00a5\u0214\3\2\2\2\u00a7\u00a8\7\f\2\2\u00a8\4\3\2\2\2\u00a9\u00aa"+
		"\7h\2\2\u00aa\u00ab\7w\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad\7e\2\2\u00ad"+
		"\u00ae\7v\2\2\u00ae\u00af\7k\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7p\2\2"+
		"\u00b1\6\3\2\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7h\2\2\u00b4\b\3\2\2\2"+
		"\u00b5\u00b6\7g\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8\7u\2\2\u00b8\u00b9"+
		"\7g\2\2\u00b9\u00ba\7k\2\2\u00ba\u00bb\7h\2\2\u00bb\n\3\2\2\2\u00bc\u00bd"+
		"\7g\2\2\u00bd\u00be\7n\2\2\u00be\u00bf\7u\2\2\u00bf\u00c0\7g\2\2\u00c0"+
		"\f\3\2\2\2\u00c1\u00c2\7h\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4\7t\2\2\u00c4"+
		"\16\3\2\2\2\u00c5\u00c6\7k\2\2\u00c6\u00c7\7p\2\2\u00c7\20\3\2\2\2\u00c8"+
		"\u00c9\7y\2\2\u00c9\u00ca\7j\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7n\2\2"+
		"\u00cc\u00cd\7g\2\2\u00cd\22\3\2\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0\7"+
		"g\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7w\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4"+
		"\7p\2\2\u00d4\24\3\2\2\2\u00d5\u00d6\7u\2\2\u00d6\u00d7\7y\2\2\u00d7\u00d8"+
		"\7k\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7e\2\2\u00da\u00db\7j\2\2\u00db"+
		"\26\3\2\2\2\u00dc\u00dd\7e\2\2\u00dd\u00de\7c\2\2\u00de\u00df\7u\2\2\u00df"+
		"\u00e0\7g\2\2\u00e0\30\3\2\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7v\2\2\u00e3"+
		"\u00e4\7j\2\2\u00e4\u00e5\7g\2\2\u00e5\u00e6\7t\2\2\u00e6\u00e7\7y\2\2"+
		"\u00e7\u00e8\7k\2\2\u00e8\u00e9\7u\2\2\u00e9\u00ea\7g\2\2\u00ea\32\3\2"+
		"\2\2\u00eb\u00ec\7v\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee\7e\2\2\u00ee\34"+
		"\3\2\2\2\u00ef\u00f0\7v\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2\7e\2\2\u00f2"+
		"\36\3\2\2\2\u00f3\u00f4\7)\2\2\u00f4 \3\2\2\2\u00f5\u00f6\7B\2\2\u00f6"+
		"\"\3\2\2\2\u00f7\u00f8\7-\2\2\u00f8$\3\2\2\2\u00f9\u00fa\7/\2\2\u00fa"+
		"&\3\2\2\2\u00fb\u00fc\7,\2\2\u00fc(\3\2\2\2\u00fd\u00fe\7\61\2\2\u00fe"+
		"*\3\2\2\2\u00ff\u0100\7,\2\2\u0100\u0103\7,\2\2\u0101\u0103\7`\2\2\u0102"+
		"\u00ff\3\2\2\2\u0102\u0101\3\2\2\2\u0103,\3\2\2\2\u0104\u0105\7^\2\2\u0105"+
		".\3\2\2\2\u0106\u0107\7\60\2\2\u0107\u0108\7-\2\2\u0108\60\3\2\2\2\u0109"+
		"\u010a\7\60\2\2\u010a\u010b\7/\2\2\u010b\62\3\2\2\2\u010c\u010d\7\60\2"+
		"\2\u010d\u010e\7,\2\2\u010e\64\3\2\2\2\u010f\u0110\7\60\2\2\u0110\u0111"+
		"\7\61\2\2\u0111\66\3\2\2\2\u0112\u0113\7\60\2\2\u0113\u0114\7^\2\2\u0114"+
		"8\3\2\2\2\u0115\u0116\7\60\2\2\u0116\u0117\7,\2\2\u0117\u011b\7,\2\2\u0118"+
		"\u0119\7\60\2\2\u0119\u011b\7`\2\2\u011a\u0115\3\2\2\2\u011a\u0118\3\2"+
		"\2\2\u011b:\3\2\2\2\u011c\u011d\7c\2\2\u011d\u011e\7p\2\2\u011e\u0122"+
		"\7f\2\2\u011f\u0120\7(\2\2\u0120\u0122\7(\2\2\u0121\u011c\3\2\2\2\u0121"+
		"\u011f\3\2\2\2\u0122<\3\2\2\2\u0123\u0124\7q\2\2\u0124\u0128\7t\2\2\u0125"+
		"\u0126\7~\2\2\u0126\u0128\7~\2\2\u0127\u0123\3\2\2\2\u0127\u0125\3\2\2"+
		"\2\u0128>\3\2\2\2\u0129\u012a\7p\2\2\u012a\u012b\7q\2\2\u012b\u012e\7"+
		"v\2\2\u012c\u012e\t\2\2\2\u012d\u0129\3\2\2\2\u012d\u012c\3\2\2\2\u012e"+
		"@\3\2\2\2\u012f\u0130\7v\2\2\u0130\u0131\7t\2\2\u0131\u0132\7w\2\2\u0132"+
		"\u0133\7g\2\2\u0133B\3\2\2\2\u0134\u0135\7h\2\2\u0135\u0136\7c\2\2\u0136"+
		"\u0137\7n\2\2\u0137\u0138\7u\2\2\u0138\u0139\7g\2\2\u0139D\3\2\2\2\u013a"+
		"\u013b\7@\2\2\u013bF\3\2\2\2\u013c\u013d\7@\2\2\u013d\u013e\7?\2\2\u013e"+
		"H\3\2\2\2\u013f\u0140\7>\2\2\u0140J\3\2\2\2\u0141\u0142\7>\2\2\u0142\u0143"+
		"\7?\2\2\u0143L\3\2\2\2\u0144\u0145\7?\2\2\u0145\u0146\7?\2\2\u0146N\3"+
		"\2\2\2\u0147\u0148\7#\2\2\u0148\u0149\7?\2\2\u0149P\3\2\2\2\u014a\u014b"+
		"\7\u0080\2\2\u014b\u014c\7?\2\2\u014cR\3\2\2\2\u014d\u014e\7>\2\2\u014e"+
		"\u014f\7>\2\2\u014fT\3\2\2\2\u0150\u0151\7@\2\2\u0151\u0152\7@\2\2\u0152"+
		"V\3\2\2\2\u0153\u0154\7@\2\2\u0154\u0155\7@\2\2\u0155\u0156\7@\2\2\u0156"+
		"X\3\2\2\2\u0157\u0158\7-\2\2\u0158\u0159\7-\2\2\u0159Z\3\2\2\2\u015a\u015b"+
		"\7/\2\2\u015b\u015c\7/\2\2\u015c\\\3\2\2\2\u015d\u015e\7-\2\2\u015e\u015f"+
		"\7?\2\2\u015f^\3\2\2\2\u0160\u0161\7/\2\2\u0161\u0162\7?\2\2\u0162`\3"+
		"\2\2\2\u0163\u0164\7,\2\2\u0164\u0165\7?\2\2\u0165b\3\2\2\2\u0166\u0167"+
		"\7\61\2\2\u0167\u0168\7?\2\2\u0168d\3\2\2\2\u0169\u016a\7\'\2\2\u016a"+
		"\u016b\7?\2\2\u016bf\3\2\2\2\u016c\u016d\7?\2\2\u016dh\3\2\2\2\u016e\u016f"+
		"\7*\2\2\u016fj\3\2\2\2\u0170\u0171\7+\2\2\u0171l\3\2\2\2\u0172\u0173\7"+
		"]\2\2\u0173n\3\2\2\2\u0174\u0175\7_\2\2\u0175p\3\2\2\2\u0176\u0177\7}"+
		"\2\2\u0177r\3\2\2\2\u0178\u0179\7\177\2\2\u0179t\3\2\2\2\u017a\u017b\7"+
		"g\2\2\u017b\u017c\7p\2\2\u017c\u017d\7f\2\2\u017dv\3\2\2\2\u017e\u017f"+
		"\7p\2\2\u017f\u0180\7c\2\2\u0180\u0181\7t\2\2\u0181\u0182\7i\2\2\u0182"+
		"\u0183\7k\2\2\u0183\u0184\7p\2\2\u0184x\3\2\2\2\u0185\u0186\7p\2\2\u0186"+
		"\u0187\7c\2\2\u0187\u0188\7t\2\2\u0188\u0189\7i\2\2\u0189\u018a\7q\2\2"+
		"\u018a\u018b\7w\2\2\u018b\u018c\7v\2\2\u018cz\3\2\2\2\u018d\u018e\7e\2"+
		"\2\u018e\u018f\7n\2\2\u018f\u0190\7c\2\2\u0190\u0191\7u\2\2\u0191\u0192"+
		"\7u\2\2\u0192|\3\2\2\2\u0193\u0194\7(\2\2\u0194~\3\2\2\2\u0195\u0196\7"+
		"~\2\2\u0196\u0080\3\2\2\2\u0197\u0198\7`\2\2\u0198\u0082\3\2\2\2\u0199"+
		"\u019a\7\u0080\2\2\u019a\u0084\3\2\2\2\u019b\u019d\t\3\2\2\u019c\u019b"+
		"\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u019c\3\2\2\2\u019e\u019f\3\2\2\2\u019f"+
		"\u01a1\3\2\2\2\u01a0\u01a2\7N\2\2\u01a1\u01a0\3\2\2\2\u01a1\u01a2\3\2"+
		"\2\2\u01a2\u0086\3\2\2\2\u01a3\u01a5\t\3\2\2\u01a4\u01a3\3\2\2\2\u01a5"+
		"\u01a8\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01a9\3\2"+
		"\2\2\u01a8\u01a6\3\2\2\2\u01a9\u01ab\7\60\2\2\u01aa\u01ac\t\3\2\2\u01ab"+
		"\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae\3\2"+
		"\2\2\u01ae\u01bc\3\2\2\2\u01af\u01b1\t\3\2\2\u01b0\u01af\3\2\2\2\u01b1"+
		"\u01b2\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3\u01b4\3\2"+
		"\2\2\u01b4\u01b8\7\60\2\2\u01b5\u01b7\t\3\2\2\u01b6\u01b5\3\2\2\2\u01b7"+
		"\u01ba\3\2\2\2\u01b8\u01b6\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b9\u01bc\3\2"+
		"\2\2\u01ba\u01b8\3\2\2\2\u01bb\u01a6\3\2\2\2\u01bb\u01b0\3\2\2\2\u01bc"+
		"\u0088\3\2\2\2\u01bd\u01c1\t\4\2\2\u01be\u01c0\t\5\2\2\u01bf\u01be\3\2"+
		"\2\2\u01c0\u01c3\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2"+
		"\u008a\3\2\2\2\u01c3\u01c1\3\2\2\2\u01c4\u01c5\7.\2\2\u01c5\u008c\3\2"+
		"\2\2\u01c6\u01c7\7<\2\2\u01c7\u008e\3\2\2\2\u01c8\u01c9\7=\2\2\u01c9\u0090"+
		"\3\2\2\2\u01ca\u01cb\7\60\2\2\u01cb\u0092\3\2\2\2\u01cc\u01cd\7b\2\2\u01cd"+
		"\u0094\3\2\2\2\u01ce\u01cf\7$\2\2\u01cf\u0096\3\2\2\2\u01d0\u01d1\7\60"+
		"\2\2\u01d1\u01d2\7)\2\2\u01d2\u0098\3\2\2\2\u01d3\u01d4\7\61\2\2\u01d4"+
		"\u01d7\7\61\2\2\u01d5\u01d7\7\'\2\2\u01d6\u01d3\3\2\2\2\u01d6\u01d5\3"+
		"\2\2\2\u01d7\u01db\3\2\2\2\u01d8\u01da\n\6\2\2\u01d9\u01d8\3\2\2\2\u01da"+
		"\u01dd\3\2\2\2\u01db\u01d9\3\2\2\2\u01db\u01dc\3\2\2\2\u01dc\u01df\3\2"+
		"\2\2\u01dd\u01db\3\2\2\2\u01de\u01e0\7\2\2\3\u01df\u01de\3\2\2\2\u01df"+
		"\u01e0\3\2\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01e2\bM\2\2\u01e2\u009a\3\2"+
		"\2\2\u01e3\u01e5\t\7\2\2\u01e4\u01e3\3\2\2\2\u01e5\u01e6\3\2\2\2\u01e6"+
		"\u01e4\3\2\2\2\u01e6\u01e7\3\2\2\2\u01e7\u01f8\3\2\2\2\u01e8\u01e9\7\60"+
		"\2\2\u01e9\u01ea\7\60\2\2\u01ea\u01eb\7\60\2\2\u01eb\u01ef\3\2\2\2\u01ec"+
		"\u01ee\t\b\2\2\u01ed\u01ec\3\2\2\2\u01ee\u01f1\3\2\2\2\u01ef\u01ed\3\2"+
		"\2\2\u01ef\u01f0\3\2\2\2\u01f0\u01f3\3\2\2\2\u01f1\u01ef\3\2\2\2\u01f2"+
		"\u01f4\t\6\2\2\u01f3\u01f2\3\2\2\2\u01f4\u01f5\3\2\2\2\u01f5\u01f3\3\2"+
		"\2\2\u01f5\u01f6\3\2\2\2\u01f6\u01f8\3\2\2\2\u01f7\u01e4\3\2\2\2\u01f7"+
		"\u01e8\3\2\2\2\u01f8\u01f9\3\2\2\2\u01f9\u01fa\bN\2\2\u01fa\u009c\3\2"+
		"\2\2\u01fb\u01fc\t\t\2\2\u01fc\u009e\3\2\2\2\u01fd\u01ff\5\u0093J\2\u01fe"+
		"\u0200\5\u00a1Q\2\u01ff\u01fe\3\2\2\2\u01ff\u0200\3\2\2\2\u0200\u0201"+
		"\3\2\2\2\u0201\u0202\5\u0093J\2\u0202\u020a\3\2\2\2\u0203\u0205\5\u0095"+
		"K\2\u0204\u0206\5\u00a1Q\2\u0205\u0204\3\2\2\2\u0205\u0206\3\2\2\2\u0206"+
		"\u0207\3\2\2\2\u0207\u0208\5\u0095K\2\u0208\u020a\3\2\2\2\u0209\u01fd"+
		"\3\2\2\2\u0209\u0203\3\2\2\2\u020a\u00a0\3\2\2\2\u020b\u020d\5\u00a3R"+
		"\2\u020c\u020b\3\2\2\2\u020d\u020e\3\2\2\2\u020e\u020c\3\2\2\2\u020e\u020f"+
		"\3\2\2\2\u020f\u00a2\3\2\2\2\u0210\u0213\n\n\2\2\u0211\u0213\5\u00a5S"+
		"\2\u0212\u0210\3\2\2\2\u0212\u0211\3\2\2\2\u0213\u00a4\3\2\2\2\u0214\u0215"+
		"\7^\2\2\u0215\u0216\t\13\2\2\u0216\u00a6\3\2\2\2\34\2\u0102\u011a\u0121"+
		"\u0127\u012d\u019e\u01a1\u01a6\u01ad\u01b2\u01b8\u01bb\u01c1\u01d6\u01db"+
		"\u01df\u01e6\u01ef\u01f5\u01f7\u01ff\u0205\u0209\u020e\u0212\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}